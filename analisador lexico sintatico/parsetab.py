
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IDENTIFIER NUMBER OPERATOR RESERVED SEPARATORprogram : statement_liststatement_list : statement\n| statement statement_liststatement : RESERVED IDENTIFIER OPERATOR expression SEPARATORstatement : IDENTIFIER OPERATOR term OPERATOR term SEPARATOR\n| IDENTIFIER OPERATOR term SEPARATORstatement : RESERVED SEPARATOR expression SEPARATOR block\n| RESERVED SEPARATOR expression SEPARATOR block RESERVED block\n| RESERVED SEPARATOR expression SEPARATOR block RESERVED statementblock : SEPARATOR statement_list SEPARATOR\n| SEPARATOR SEPARATORexpression : term\n| term comparison_operator termterm : IDENTIFIER\n| NUMBER\n| OPERATOR IDENTIFIER\n| OPERATOR NUMBERcomparison_operator : OPERATOR'
    
_lr_action_items = {'RESERVED':([0,3,24,25,26,27,30,32,33,34,35,36,],[4,4,-6,-4,4,32,-11,4,-5,-10,-8,-9,]),'IDENTIFIER':([0,3,4,8,9,10,15,19,20,23,24,25,26,27,30,32,33,34,35,36,],[5,5,7,13,13,13,21,13,-18,13,-6,-4,5,-7,-11,5,-5,-10,-8,-9,]),'$end':([1,2,3,6,24,25,27,30,33,34,35,36,],[0,-1,-2,-3,-6,-4,-7,-11,-5,-10,-8,-9,]),'SEPARATOR':([3,4,6,11,12,13,14,16,17,18,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-2,8,-3,18,-12,-14,-15,24,25,26,-16,-17,-6,-4,30,-7,-13,33,-11,34,26,-5,-10,-8,-9,]),'OPERATOR':([5,7,8,9,10,12,13,14,16,19,20,21,22,23,],[9,10,15,15,15,20,-14,-15,23,15,-18,-16,-17,15,]),'NUMBER':([8,9,10,15,19,20,23,],[14,14,14,22,14,-18,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,26,],[2,6,31,]),'statement':([0,3,26,32,],[3,3,3,36,]),'expression':([8,10,],[11,17,]),'term':([8,9,10,19,23,],[12,16,12,28,29,]),'comparison_operator':([12,],[19,]),'block':([18,32,],[27,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','BrunnoLuiz_Analisador.py',54),
  ('statement_list -> statement','statement_list',1,'p_statement_list','BrunnoLuiz_Analisador.py',60),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','BrunnoLuiz_Analisador.py',61),
  ('statement -> RESERVED IDENTIFIER OPERATOR expression SEPARATOR','statement',5,'p_statement_declaration','BrunnoLuiz_Analisador.py',65),
  ('statement -> IDENTIFIER OPERATOR term OPERATOR term SEPARATOR','statement',6,'p_statement_assignment','BrunnoLuiz_Analisador.py',73),
  ('statement -> IDENTIFIER OPERATOR term SEPARATOR','statement',4,'p_statement_assignment','BrunnoLuiz_Analisador.py',74),
  ('statement -> RESERVED SEPARATOR expression SEPARATOR block','statement',5,'p_statement_condition','BrunnoLuiz_Analisador.py',79),
  ('statement -> RESERVED SEPARATOR expression SEPARATOR block RESERVED block','statement',7,'p_statement_condition','BrunnoLuiz_Analisador.py',80),
  ('statement -> RESERVED SEPARATOR expression SEPARATOR block RESERVED statement','statement',7,'p_statement_condition','BrunnoLuiz_Analisador.py',81),
  ('block -> SEPARATOR statement_list SEPARATOR','block',3,'p_block','BrunnoLuiz_Analisador.py',86),
  ('block -> SEPARATOR SEPARATOR','block',2,'p_block','BrunnoLuiz_Analisador.py',87),
  ('expression -> term','expression',1,'p_expression_comparison','BrunnoLuiz_Analisador.py',91),
  ('expression -> term comparison_operator term','expression',3,'p_expression_comparison','BrunnoLuiz_Analisador.py',92),
  ('term -> IDENTIFIER','term',1,'p_term','BrunnoLuiz_Analisador.py',96),
  ('term -> NUMBER','term',1,'p_term','BrunnoLuiz_Analisador.py',97),
  ('term -> OPERATOR IDENTIFIER','term',2,'p_term','BrunnoLuiz_Analisador.py',98),
  ('term -> OPERATOR NUMBER','term',2,'p_term','BrunnoLuiz_Analisador.py',99),
  ('comparison_operator -> OPERATOR','comparison_operator',1,'p_comparison_operator','BrunnoLuiz_Analisador.py',104),
]
